<?xml version="1.0" encoding="utf-8" ?>
<project name="Kino" default="build" basedir=".">
	<!-- Configure path to GWT SDK -->
	<!-- <property name="gwt.sdk" location="D:/prgms/GWT2.0" /> -->

	<property name="app.version" value="1.4.1" />
	<property name="mod.name" value="Kinoshka" />
	<property name="mod.fullname" value="com.ast.kinoshka.frontend.gwt.${mod.name}" />

	<property name="target" location="bin" />
	<property name="release" location="../release/build_${app.version}" />
	<property name="src" location="src/java" />
	<property name="test" location="src/test" />
	
	<property name="db.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
	<property name="db.url" value="jdbc:derby:target/db" />
	<property name="db.user" value="" />
	<property name="db.password" value="" />

	<!-- auto condition evaluation  -->
	<!--<available file="db" property="db.available" />-->

	<path id="project.class.path">
		<pathelement location="${target}/classes" />
		<!-- Add any additional non-server libs (such as JUnit) -->
		<fileset dir="${target}/lib" includes="**/*.jar" />
	</path>

	<!-- initialize resources -->
	<target name="init" description="initializing">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${target}" />
	</target>

	<!-- prepare source files -->
	<target name="srcs" depends="init">
		<mkdir dir="${target}/src" />

		<copy todir="${target}/src">
			<fileset dir="${src}" />
		</copy>
	</target>

	<!-- prepare test source files -->
	<target name="srcs.test" depends="init">
		<copy todir="${target}/src">
			<fileset dir="${test}" />
		</copy>
	</target>

	<target name="libs" depends="init" description="Copy libs">
		<mkdir dir="${target}/lib" />
		<copy todir="${target}/lib" file="lib/gwt-servlet.jar" />
		<copy todir="${target}/lib">
			<fileset dir="lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>
	</target>

	<target name="javac" depends="libs, srcs" description="Compile java source">
		<mkdir dir="${target}/classes" />
		<javac srcdir="${target}/src" includes="**" encoding="utf-8" destdir="${target}/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="${target}/classes">
			<fileset dir="${target}/src" excludes="**/*.java" />
		</copy>
	</target>

	<!-- *************************** GWT building tasks  ***********************-->
	<target name="gwtc" depends="javac" description="GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="${target}/src" />
				<path refid="project.class.path" />
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx256M" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="${mod.fullname}" />
			<arg value="-war" />
			<arg value="${target}/web" />
			<!-- <arg value="-compileReport"/> -->
		</java>
	</target>

	<target name="devmode" depends="javac" description="Run development mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
			<classpath>
				<pathelement location="${target}/src" />
				<path refid="project.class.path" />
			</classpath>
			<jvmarg value="-Xmx256M" />
			<arg value="-startupUrl" />
			<arg value="${mod.name}.html" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="-war" />
			<arg value="${target}/web" />
			<arg value="${mod.fullname}" />
		</java>
	</target>

	<target name="hosted" depends="devmode" description="Run development mode (NOTE: the 'hosted' target is deprecated)" />

	<!-- *************************** Unit Tests tasks  ***********************-->
	<target name="javac.tests" depends="javac" description="Compiles test code">
		<mkdir dir="${target}/testclasses" />
		<javac srcdir="${test}" destdir="${target}/testclasses" includes="**"
			   encoding="utf-8" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
		</javac>
	</target>

	<target name="db.create">
		<!-- create tables -->
		<sql driver="${db.driver}"
			 url="${db.url};create=true;" userid="${db.user}" password="${db.password}"
			 classpathref="project.class.path" onerror="abort" src="sql/create_tables.sql">
		</sql>
		<!-- shut down derby to release connection -->
		<sql driver="${db.driver}"
			 url="${db.url};shutdown=true;"
			 classpathref="project.class.path" userid="${db.user}" password="${db.password}"
			 onerror="continue" failOnConnectionError="false">none</sql>
	</target>

	<target name="test" depends="javac.tests" description="Run development mode tests">
		<mkdir dir="${target}/testreports/htmlunit.dev" />
		<junit fork="yes" printsummary="yes" haltonfailure="yes">
			<jvmarg line="-Xmx256m" />
			<sysproperty key="gwt.args" value="-logLevel WARN" />
			<sysproperty key="java.awt.headless" value="true" />
			<classpath>
				<pathelement location="${target}/testclasses" />
				<path refid="project.class.path" />
			</classpath>
			<batchtest todir="${target}/testreports/htmlunit.dev">
				<fileset dir="${test}">
					<include name="**/*Test.java" />
					<exclude name="**/testcommon/*.java" />
				</fileset>
			</batchtest>
			<formatter type="plain" />
			<formatter type="xml" />
		</junit>
	</target>

	<!-- pack archive -->
	<target name="pack" depends="gwtc" description="Packaging">
		<jar destfile="${target}/kinoshka.jar" basedir="${target}/classes" manifest="src/MANIFEST.MF" />
	</target>

	<target name="build" depends="pack" description="Build the project" />

	<target name="release" depends="build" description="Cleaning up excess data">
		<mkdir dir="${release}" />
		<mkdir dir="${release}/lib" />
		<mkdir dir="${release}/web" />
		<mkdir dir="${release}/db" />
		<copy todir="${release}" file="run.bat"/>
		<copy todir="${release}" file="logging.properties"/>
		<copy todir="${release}" file="${target}/kinoshka.jar"/>
		<copy todir="${release}/lib">
			<fileset dir="lib">
				<include name="**/*.jar" />
				<exclude name="log4j*.jar" />
				<exclude name="junit*.jar" />
				<exclude name="easymock*.jar" />
				<exclude name="gwt-dev.jar" />
				<exclude name="gwt-user.jar" />
				<exclude name="commons-logging*.jar" />
			</fileset>
		</copy>
		<copy todir="${release}/web">
			<fileset dir="${target}/web/${mod.name}"/>
		</copy>
		<copy todir="${release}/db">
			<fileset dir="../db/storage" />
		</copy>
	</target>

	<target name="clean" description="Cleans this project">
		<delete dir="${target}" failonerror="false" />
	</target>

</project>
